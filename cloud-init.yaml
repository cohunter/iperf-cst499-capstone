#cloud-config

output: {all: '| tee -a /var/log/cloud-init-output.log'}

groups:
 - netservices

users:
 - name: iperf
   gecos: Unprivileged iPerf user
   primary_group: netservices
   sudo: false
   ssh_authorized_keys:
     - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHjePLheYkqz6wY6G4ja+GtZ1QFiubHKNkhIQeB/CgzW
   lock_passwd: true
   shell: /bin/bash
 - name: cohunter
   gecos: Administrative User
   sudo: ALL=(ALL) NOPASSWD:ALL
   ssh_import_id: gh:cohunter
   ssh_authorized_keys:
     - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDYBWRXbH2M5+DVgPN4upT4RKvC3B6FGFwq0n1lZAEm7
   shell: /usr/bin/zsh

package_update: true
package_upgrade: true
package_reboot_if_required: true

ssh_pwauth: false

disable_ec2_metadata: true
locale: en_US.UTF-8
locale_configfile: /etc/default/locale

# tmux and egrep are present in the base and minimized Ubuntu 18.04 image
# sudo is not present in the minimized Ubuntu 18.04 image
packages:
 - golang-go
 - build-essential
 - git
 - zsh
 - iptables-persistent
 - netfilter-persistent
 - nginx
 - sudo

# Assume the network config will be provided by the selected base image.
# Prevents error on Scaleway/Online.net
network: {}

sm_misc:
# Download and compile iPerf 2.0.13 from source
 - &iperf_setup |
    cd
    git clone git://git.code.sf.net/p/iperf2/code
    cd code
    git reset --hard 41bfc67a9d2c654c360953575ee5160ee4d798e7
    ./configure
    make -j4
    mkdir -p ~/bin
    install -g netservices src/iperf -t ~/bin

# Download and compile iPerf 3.7 from source
 - &iperf3_setup |
    cd
    git clone https://github.com/esnet/iperf.git
    cd iperf
    git reset --hard dfcea9f6a09ead01089a3c9d20c7032f2c0af2c1
    ./configure
    make -j4
    mkdir -p ~/bin
    install -g netservices src/iperf3 -t ~/bin
    cp -r src/.libs ~/bin/

# Download our program which runs iPerf 2 and iPerf 3 instances and records the
# selected portions of the output to CSV for analysis. Configure crontab to
# automatically start the server in a tmux session if the instance is rebooted.
 - &metasrv_setup |
    cd
    git clone https://github.com/cohunter/iperf-cst499-capstone.git
    echo '@reboot PATH="$HOME/bin:$PATH" tmux new-session -d -s metasrv go run $HOME/iperf-cst499-capstone/metasrv.go' | crontab -u iperf -
    PATH="$HOME/bin:$PATH" tmux new-session -d -s metasrv go run iperf-cst499-capstone/metasrv.go

# Configure the firewall to reject connections from IP addresses which are not
# either within our planned source ranges for the tests or CloudFlare. Use
# netfilter-persistent and the iptables-persistent plugin to make the firewall
# configuration restore itself if the instance is rebooted.
 - &firewall_setup |
    iptables -I INPUT -p tcp --dport 5000:5300 -j REJECT
    iptables -I INPUT -p udp --dport 5000:5300 -j REJECT
    iptables -I INPUT -s 98.192.0.0/10 -p tcp --dport 5000:5300 -j ACCEPT
    iptables -I INPUT -s 98.192.0.0/10 -p udp --dport 5000:5300 -j ACCEPT
    curl https://www.cloudflare.com/ips-v4 2>/dev/null | while read line; do echo "$line" | egrep -qx "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[1-3][0-9]"; [ $? -eq 0 ] && iptables -I INPUT -s "$line" -j ACCEPT; [ $? -ne 0 ] && echo -E "WARN: IPv4 range not in expected format: $line"; done
    netfilter-persistent save
    
    ip6tables -I INPUT -j DROP
    ip6tables -I INPUT -s 2001:bc8::/32 -j ACCEPT
    curl https://www.cloudflare.com/ips-v6 2>/dev/null | while read line; do echo "$line" | egrep -qx "[0-9a-f:]{5,16}::/[1-3]{1}[0-9]{1}"; [ "$?" -eq 0 ] && ip6tables -I INPUT -s "$line" -j ACCEPT; [ "$?" -ne 0 ] && echo -E "WARN: IPv6 range not in expected format: $line"; done
    netfilter-persistent save

# Minimized Ubuntu 18.04 image does not come with default sudo config to allow
# the root user to run sudo. Here we add the root user to the sudoers file.
 - &sudo_root |
    echo 'root    ALL=(ALL:ALL) ALL' | EDITOR='tee -a' visudo

runcmd:
 - [ sh, -c, *sudo_root ]
 - [ sudo, -Hu, iperf, sh, -c, *iperf_setup ]
 - [ sudo, -Hu, iperf, sh, -c, *iperf3_setup ]
 - [ sudo, -Hu, iperf, sh, -c, *metasrv_setup ]
 - [ sh, -c, *firewall_setup ]

# Submit the instance name, IP address, and generated public keys to our
# collection endpoint. See phone_home nginx config in the GitHub repository.
phone_home:
 url: |-
   https://phone_home.regex.be/ingest/cloud-init-iperf
 post: all
 tries: 3

# We configure all of the servers to use UTC time to minimize errors and extra
# work relating to timezone conversion during data analysis.
timezone: UTC
